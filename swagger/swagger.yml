openapi: "3.0.0"
info:
  title: "BOOKING-SERVICE [BUSRIYA.COM]"
  version: "1.7.0"
  description: "Apis for booking services in the busriya system"
  contact:
    name: "Sanuga Kuruppu [YR3COBSCCOMP232P002]"
    email: "sanugakuruppu.info@gmail.com"
servers:
- url: "https://api.busriya.com"
  description: "PRODUCTION"
- url: "http://localhost:5002"
  description: "LOCAL"
security:
- bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  # =================== COMMUTER ===================
  # ================================================
  # ================================================
  /booking-service/v1.7/commuters:
    post:
      summary: Create a new commuter
      tags:
      - Commuter
      description: Create a new commuter with the provided data.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  properties:
                    firstName:
                      type: string
                      example: "Sanuga"
                    lastName:
                      type: string
                      example: "Kuruppu"
                nic:
                  type: string
                  example: "200127201635"
                contact:
                  type: object
                  properties:
                    mobile:
                      type: string
                      example: "+94778060563"
                    email:
                      type: string
                      example: "sanugakuruppu.info@gmail.com"
      responses:
        201:
          description: Commuter creation success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  commuterId:
                    type: number
                    example: 30681684
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-12-05T21:41:35.858Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-05T21:41:35.858Z"
                  name:
                    type: object
                    properties:
                      firstName:
                        type: string
                        example: "Sanuga"
                      lastName:
                        type: string
                        example: "Kuruppu"
                  nic:
                    type: string
                    example: "200127201635"
                  contact:
                    type: object
                    properties:
                      mobile:
                        type: string
                        example: "+94778060563"
                      email:
                        type: string
                        example: "sanugakuruppu.info@gmail.com"
        400:
          description: Bad request. Validation errors in input data.
        500:
          description: Internal server error.
    get:
      summary: Get all commuters
      tags:
      - Commuter
      description: Retrieve a paginated list of all commuters.
      parameters:
      - name: page
        in: query
        description: Page number (1-based).
        required: false
        schema:
          type: integer
          example: 1
      - name: size
        in: query
        description: Number of items per page.
        required: false
        schema:
          type: integer
          example: 10
      responses:
        200:
          description: A paginated list of commuters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    example: 1
                  totalPages:
                    type: integer
                    example: 5
                  totalItems:
                    type: integer
                    example: 50
                  commuters:
                    type: array
                    items:
                      type: object
                      properties:
                        commuterId:
                          type: number
                          example: 43814728
                        name:
                          type: object
                          properties:
                            firstName:
                              type: string
                              example: "Sanuga"
                            lastName:
                              type: string
                              example: "Kuruppu"
                        nic:
                          type: string
                          example: "200127201635"
                        contact:
                          type: object
                          properties:
                            mobile:
                              type: string
                              example: "+94778060563"
                            email:
                              type: string
                              example: "sanugakuruppu.info@gmail.com"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-12-05T21:40:27.379Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2024-12-05T21:40:27.379Z"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
  /booking-service/v1.7/commuters/{commuterId}:
    get:
      summary: Get a commuter by ID
      tags:
      - Commuter
      description: Retrieve details of a commuter using their ID.
      parameters:
      - in: path
        name: commuterId
        required: true
        description: Unique ID of the commuter to retrieve.
        schema:
          type: number
          example: 43814728
      responses:
        200:
          description: Commuter details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  commuterId:
                    type: number
                    example: 43814728
                  name:
                    type: object
                    properties:
                      firstName:
                        type: string
                        example: "Sanuga"
                      lastName:
                        type: string
                        example: "Kuruppu"
                  nic:
                    type: string
                    example: "200127201635"
                  contact:
                    type: object
                    properties:
                      mobile:
                        type: string
                        example: "+94778060563"
                      email:
                        type: string
                        example: "sanugakuruppu.info@gmail.com"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-12-05T21:40:27.379Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-05T21:40:27.379Z"
        400:
          description: Bad request. Validation errors in the input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "bad request, commuterId should be a number"
        404:
          description: Commuter not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "resource not found"
        500:
          description: Internal server error.
  # =================== BOOKING ===================
  # ================================================
  # ================================================
  /booking-service/v1.7/bookings:
    post:
      summary: Create a new booking
      tags:
      - Booking
      description: Create a new booking for a trip with the specified commuter, trip ID, and seat number.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                commuter:
                  type: number
                  example: 52493143
                  description: The unique ID of the commuter.
                trip:
                  type: number
                  example: 81957915
                  description: The unique ID of the trip.
                seatNumber:
                  type: number
                  example: 46
                  description: The seat number for the booking.
              required:
              - commuter
              - trip
              - seatNumber
      responses:
        201:
          description: Booking creation success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingId:
                    type: number
                    example: 79318581
                  trip:
                    type: object
                    properties:
                      tripId:
                        type: number
                        example: 81957915
                  commuter:
                    type: object
                    properties:
                      commuterId:
                        type: number
                        example: 52493143
                      name:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: "Sanuga"
                          lastName:
                            type: string
                            example: "Kuruppu"
                      nic:
                        type: string
                        example: "200127201635"
                      contact:
                        type: object
                        properties:
                          mobile:
                            type: string
                            example: "+94778060563"
                          email:
                            type: string
                            example: "sanugakuruppu.info@gmail.com"
                  seatNumber:
                    type: number
                    example: 46
                  bookingStatus:
                    type: string
                    example: "CREATING"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-12-14T15:29:32.018Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-14T15:29:32.018Z"
        400:
          description: Bad request. Validation errors in input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "seat already used"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
    get:
      summary: Retrieve all bookings
      tags:
      - Booking
      description: Fetch a paginated list of all bookings, including trip, commuter, and booking details.
      parameters:
      - name: page
        in: query
        description: The page number to retrieve (default is 1).
        required: false
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        description: The number of items per page (default is 10).
        required: false
        schema:
          type: integer
          example: 10
      responses:
        200:
          description: List of bookings retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    example: 1
                    description: The current page number.
                  totalPages:
                    type: integer
                    example: 5
                    description: The total number of pages available.
                  totalItems:
                    type: integer
                    example: 50
                    description: The total number of bookings.
                  data:
                    type: array
                    description: List of bookings for the current page.
                    items:
                      type: object
                      properties:
                        bookingId:
                          type: number
                          example: 70543086
                        trip:
                          type: object
                          properties:
                            tripId:
                              type: number
                              example: 81957915
                            tripNumber:
                              type: string
                              example: "TRIP-1edfa22f-0f88-4cd0-83ca-5135f2133230"
                            tripDate:
                              type: string
                              format: date-time
                              example: "2024-12-17T00:00:00.000Z"
                            startLocation:
                              type: object
                              properties:
                                coordinates:
                                  type: object
                                  properties:
                                    lat:
                                      type: number
                                      format: double
                                      example: 6.933549671456952
                                    log:
                                      type: number
                                      format: double
                                      example: 79.85550999641683
                                stationId:
                                  type: number
                                  example: 60287861
                                name:
                                  type: string
                                  example: "Colombo"
                            endLocation:
                              type: object
                              properties:
                                coordinates:
                                  type: object
                                  properties:
                                    lat:
                                      type: number
                                      format: double
                                      example: 6.933549671456952
                                    log:
                                      type: number
                                      format: double
                                      example: 79.85550999641683
                                stationId:
                                  type: number
                                  example: 75776150
                                name:
                                  type: string
                                  example: "Matara"
                            schedule:
                              type: object
                              properties:
                                scheduleId:
                                  type: number
                                  example: 57500669
                                departureTime:
                                  type: string
                                  example: "01:30"
                                arrivalTime:
                                  type: string
                                  example: "10:00"
                            vehicle:
                              type: object
                              properties:
                                vehicleId:
                                  type: number
                                  example: 82437327
                                registrationNumber:
                                  type: string
                                  example: "ABC12345"
                                model:
                                  type: string
                                  example: "Volvo 960"
                                capacity:
                                  type: number
                                  example: 50
                                type:
                                  type: string
                                  example: "Luxury"
                                airCondition:
                                  type: boolean
                                  example: true
                                adjustableSeats:
                                  type: boolean
                                  example: true
                                chargingCapability:
                                  type: boolean
                                  example: false
                                restStops:
                                  type: boolean
                                  example: true
                                movie:
                                  type: boolean
                                  example: false
                                music:
                                  type: boolean
                                  example: true
                                cupHolder:
                                  type: boolean
                                  example: true
                                emergencyExit:
                                  type: boolean
                                  example: true
                            cancellationPolicy:
                              type: object
                              properties:
                                policyId:
                                  type: number
                                  example: 67868134
                                policyName:
                                  type: string
                                  example: "Health Insurance"
                                type:
                                  type: string
                                  example: "General"
                                description:
                                  type: string
                                  example: "Comprehensive health coverage for all employees."
                        commuter:
                          type: object
                          properties:
                            commuterId:
                              type: number
                              example: 52493143
                            name:
                              type: object
                              properties:
                                firstName:
                                  type: string
                                  example: "Sanuga"
                                lastName:
                                  type: string
                                  example: "Kuruppu"
                            contact:
                              type: object
                              properties:
                                mobile:
                                  type: string
                                  example: "+94778060563"
                                email:
                                  type: string
                                  example: "sanugakuruppu.info@gmail.com"
                            nic:
                              type: string
                              example: "200127201635"
                        seatNumber:
                          type: number
                          example: 41
                        bookingStatus:
                          type: string
                          example: "EXPIRED"
                        ticketStatus:
                          type: string
                          example: "NOT_USED"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-12-14T11:54:39.801Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2024-12-14T11:55:21.193Z"
                        price:
                          type: number
                          example: 7500
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
  /booking-service/v1.7/bookings/{bookingId}:
    get:
      summary: Get a booking by ID
      tags:
      - Booking
      description: Retrieve the details of a specific booking using its ID.
      parameters:
      - name: bookingId
        in: path
        required: true
        description: The ID of the booking to retrieve.
        schema:
          type: integer
          example: 70543086
      responses:
        200:
          description: Booking found successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  trip:
                    type: object
                    properties:
                      startLocation:
                        type: object
                        properties:
                          coordinates:
                            type: object
                            properties:
                              lat:
                                type: number
                                format: float
                                example: 6.933549671456952
                              log:
                                type: number
                                format: float
                                example: 79.85550999641683
                          stationId:
                            type: integer
                            example: 60287861
                          name:
                            type: string
                            example: "Colombo"
                      endLocation:
                        type: object
                        properties:
                          coordinates:
                            type: object
                            properties:
                              lat:
                                type: number
                                format: float
                                example: 6.933549671456952
                              log:
                                type: number
                                format: float
                                example: 79.85550999641683
                          stationId:
                            type: integer
                            example: 75776150
                          name:
                            type: string
                            example: "Matara"
                      schedule:
                        type: object
                        properties:
                          scheduleId:
                            type: integer
                            example: 57500669
                          departureTime:
                            type: string
                            example: "01:30"
                          arrivalTime:
                            type: string
                            example: "10:00"
                      vehicle:
                        type: object
                        properties:
                          vehicleId:
                            type: integer
                            example: 82437327
                          registrationNumber:
                            type: string
                            example: "ABC12345"
                          model:
                            type: string
                            example: "Volvo 960"
                          capacity:
                            type: integer
                            example: 50
                          type:
                            type: string
                            example: "Luxury"
                          airCondition:
                            type: boolean
                            example: true
                          adjustableSeats:
                            type: boolean
                            example: true
                          chargingCapability:
                            type: boolean
                            example: false
                          restStops:
                            type: boolean
                            example: true
                          movie:
                            type: boolean
                            example: false
                          music:
                            type: boolean
                            example: true
                          cupHolder:
                            type: boolean
                            example: true
                          emergencyExit:
                            type: boolean
                            example: true
                      cancellationPolicy:
                        type: object
                        properties:
                          policyId:
                            type: integer
                            example: 67868134
                          policyName:
                            type: string
                            example: "Health Insurance"
                          type:
                            type: string
                            example: "General"
                          description:
                            type: string
                            example: "Comprehensive health coverage for all employees."
                      tripId:
                        type: integer
                        example: 81957915
                      tripNumber:
                        type: string
                        example: "TRIP-1edfa22f-0f88-4cd0-83ca-5135f2133230"
                      tripDate:
                        type: string
                        format: date-time
                        example: "2024-12-17T00:00:00.000Z"
                  bookingId:
                    type: integer
                    example: 70543086
                  commuter:
                    type: object
                    properties:
                      name:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: "Sanuga"
                          lastName:
                            type: string
                            example: "Kuruppu"
                      contact:
                        type: object
                        properties:
                          mobile:
                            type: string
                            example: "+94778060563"
                          email:
                            type: string
                            example: "sanugakuruppu.info@gmail.com"
                      commuterId:
                        type: integer
                        example: 52493143
                      nic:
                        type: string
                        example: "200127201635"
                  seatNumber:
                    type: integer
                    example: 41
                  bookingStatus:
                    type: string
                    example: "EXPIRED"
                  ticketStatus:
                    type: string
                    example: "NOT_USED"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-12-14T11:54:39.801Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-14T11:55:21.193Z"
                  price:
                    type: number
                    example: 7500
        400:
          description: Bad request. Validation error in input.
        404:
          description: Booking not found.
        500:
          description: Internal server error.
  /booking-service/v1.7/bookings/tripId/{tripId}:
    get:
      summary: Get bookings by trip ID
      tags:
      - Booking
      description: Retrieve all bookings associated with a specific trip ID.
      parameters:
      - name: tripId
        in: path
        required: true
        description: The ID of the trip for which bookings are to be retrieved.
        schema:
          type: integer
          example: 81957915
      responses:
        200:
          description: List of bookings found successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bookingId:
                      type: integer
                      example: 70543086
                    commuter:
                      type: object
                      properties:
                        name:
                          type: object
                          properties:
                            firstName:
                              type: string
                              example: "Sanuga"
                            lastName:
                              type: string
                              example: "Kuruppu"
                        contact:
                          type: object
                          properties:
                            mobile:
                              type: string
                              example: "+94778060563"
                            email:
                              type: string
                              example: "sanugakuruppu.info@gmail.com"
                        commuterId:
                          type: integer
                          example: 52493143
                        nic:
                          type: string
                          example: "200127201635"
                    seatNumber:
                      type: integer
                      example: 41
                    bookingStatus:
                      type: string
                      example: "EXPIRED"
                    ticketStatus:
                      type: string
                      example: "NOT_USED"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2024-12-14T11:54:39.801Z"
                    updatedAt:
                      type: string
                      format: date-time
                      example: "2024-12-14T11:55:21.193Z"
                    price:
                      type: number
                      example: 7500
        400:
          description: Bad request. Validation error in input.
        404:
          description: No bookings found for the given trip ID.
        500:
          description: Internal server error.
  /booking-service/v1.7/bookings/eTicket/{eTicket}:
    get:
      summary: Retrieve booking details using eTicket
      tags:
      - Booking
      description: Fetch booking details for a specific eTicket. If the booking is found and OTP verification is pending, it will trigger OTP generation and email the commuter for verification. Otherwise, it will send the booking details.
      security: []
      parameters:
      - in: path
        name: eTicket
        required: true
        schema:
          type: string
        description: The eTicket number to search for booking details.
        example: "ET12345678"
      responses:
        200:
          description: Booking details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingId:
                    type: string
                    example: "BK123456"
                    description: The unique booking ID.
                  trip:
                    type: string
                    example: "TripName"
                    description: Details of the trip.
                  commuter:
                    type: object
                    properties:
                      commuterId:
                        type: string
                        example: "COM12345"
                        description: Unique commuter ID.
                      name:
                        type: string
                        example: "John Doe"
                        description: The name of the commuter.
                      nic:
                        type: string
                        example: "982345678V"
                        description: The commuter's NIC.
                      contact:
                        type: string
                        example: "johndoe@example.com"
                        description: The commuter's email contact.
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-12-01T10:00:00Z"
                    description: Booking creation time.
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-10T12:00:00Z"
                    description: Last updated time for the booking.
                  qrValidationToken:
                    type: string
                    example: "QRTOKEN12345"
                    description: Token for QR validation.
                  eTicket:
                    type: string
                    example: "ET12345678"
                    description: The eTicket number.
                  seatNumber:
                    type: string
                    example: "12A"
                    description: Seat number for the booking.
                  price:
                    type: number
                    example: 1500.75
                    description: The price of the booking.
                  ticketStatus:
                    type: string
                    example: "CONFIRMED"
                    description: Status of the ticket.
                  bookingStatus:
                    type: string
                    example: "PAID"
                    description: Status of the booking.
        201:
          description: OTP verification triggered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  verificationId:
                    type: string
                    example: "shortUUID123"
                    description: Unique ID for the OTP verification request.
        400:
          description: Invalid eTicket or validation error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "bad request, eTicket should be a String"
        404:
          description: No booking found for the provided eTicket.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "no booking found for this ticket"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
    patch:
      summary: Use the ticket or scan the ticket
      tags:
      - Booking
      description: Updates the `ticketStatus` of a booking identified by `eTicket` if the booking exists and meets the required conditions.
      parameters:
      - name: eTicket
        in: path
        required: true
        description: The eTicket string identifying the booking.
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticketStatus:
                  type: string
                  enum: [ USED ]
                  description: Status of the ticket to be updated.
              required:
              - ticketStatus
      responses:
        200:
          description: Successfully updated the ticket status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingId:
                    type: integer
                  trip:
                    type: object
                    properties:
                      tripId:
                        type: integer
                      tripNumber:
                        type: string
                      tripDate:
                        type: string
                        format: date-time
                      startLocation:
                        type: object
                        properties:
                          stationId:
                            type: integer
                          name:
                            type: string
                          coordinates:
                            type: object
                            properties:
                              lat:
                                type: number
                              log:
                                type: number
                      endLocation:
                        type: object
                        properties:
                          stationId:
                            type: integer
                          name:
                            type: string
                          coordinates:
                            type: object
                            properties:
                              lat:
                                type: number
                              log:
                                type: number
                      route:
                        type: object
                        properties:
                          routeId:
                            type: integer
                          routeNumber:
                            type: string
                          routeName:
                            type: string
                          travelDistance:
                            type: string
                          travelDuration:
                            type: string
                      schedule:
                        type: object
                        properties:
                          scheduleId:
                            type: integer
                          departureTime:
                            type: string
                          arrivalTime:
                            type: string
                      vehicle:
                        type: object
                        properties:
                          vehicleId:
                            type: integer
                          registrationNumber:
                            type: string
                          model:
                            type: string
                          capacity:
                            type: integer
                          type:
                            type: string
                          airCondition:
                            type: boolean
                          adjustableSeats:
                            type: boolean
                          chargingCapability:
                            type: boolean
                          restStops:
                            type: boolean
                          movie:
                            type: boolean
                          music:
                            type: boolean
                          cupHolder:
                            type: boolean
                          emergencyExit:
                            type: boolean
                      cancellationPolicy:
                        type: object
                        properties:
                          policyId:
                            type: integer
                          policyName:
                            type: string
                          type:
                            type: string
                          description:
                            type: string
                  commuter:
                    type: object
                    properties:
                      commuterId:
                        type: integer
                      name:
                        type: string
                      nic:
                        type: string
                      contact:
                        type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  qrValidationToken:
                    type: string
                  eTicket:
                    type: string
                  seatNumber:
                    type: integer
                  price:
                    type: number
                  ticketStatus:
                    type: string
                    enum: [ USED ]
                  bookingStatus:
                    type: string
        400:
          description: Bad request due to validation errors or ticket already used.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Booking not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /booking-service/v1.7/bookings/{bookingId}/booking-status:
    patch:
      summary: Cancell a booking
      tags:
      - Booking
      description: Only certain conditions allow booking cancellations.
      security: []
      parameters:
      - in: path
        name: bookingId
        required: true
        schema:
          type: integer
        description: The ID of the booking to be updated.
        example: 12345
      requestBody:
        description: The new booking status to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingStatus:
                  type: string
                  enum:
                  - CANCELLED
                  - PAID
                  description: New status for the booking.
                  example: "CANCELLED"
      responses:
        200:
          description: Booking status updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingId:
                    type: integer
                    example: 12345
                    description: Unique booking ID.
                  trip:
                    type: object
                    properties:
                      tripId:
                        type: integer
                        example: 45678
                      cancellationPolicy:
                        type: string
                        example: "No cancellations after 24 hours"
                  commuter:
                    type: object
                    properties:
                      commuterId:
                        type: string
                        example: "COM12345"
                      name:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: "John"
                          lastName:
                            type: string
                            example: "Doe"
                      nic:
                        type: string
                        example: "982345678V"
                      contact:
                        type: object
                        properties:
                          email:
                            type: string
                            example: "johndoe@example.com"
                          phone:
                            type: string
                            example: "+94712345678"
                  bookingStatus:
                    type: string
                    example: "CANCELLED"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-24T12:34:56Z"
        400:
          description: Bad request due to invalid booking ID or status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "bad request, bookingId should be a number"
        401:
          description: User not verified to perform the update.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "please verify yourself first to cancel the booking."
        404:
          description: Booking not found or trip is no longer available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "no booking found for this ticket"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
  # =================== BOOKING PAYMENTS===================
  # ================================================
  # ================================================
  /booking-service/v1.7/booking-payments:
    post:
      summary: Create a new booking payment
      tags:
      - Booking Payment
      description: Initiate a payment for a booking with the provided booking ID.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  type: number
                  example: 97810412
                  description: The unique ID of the booking for which payment is being made.
              required:
              - booking
      responses:
        201:
          description: Payment initiation success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentId:
                    type: number
                    example: 81284267
                    description: The unique ID of the payment.
                  redirectUrl:
                    type: string
                    example: "https://theweb.asia/payment-gateway/?transactionId=73b9cd33-803c-484b-91ac-d0a54bbb5ef1"
                    description: URL to redirect for completing the payment.
                  amount:
                    type: number
                    example: 7500
                    description: The total amount to be paid.
                  method:
                    type: string
                    example: "CARD"
                    description: The payment method used.
                  type:
                    type: string
                    example: "BOOKING"
                    description: The type of payment.
                  status:
                    type: string
                    example: "PENDING"
                    description: The current status of the payment.
        400:
          description: Bad request. Validation errors in input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "this commuter is not verified"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
    get:
      summary: Retrieve all booking payments
      tags:
      - Booking Payment
      description: Fetch a paginated list of all booking payments along with their details.
      parameters:
      - name: page
        in: query
        description: The page number to retrieve (default is 1).
        required: false
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        description: The number of items per page (default is 10).
        required: false
        schema:
          type: integer
          example: 10
      responses:
        "200":
          description: Successfully retrieved booking payments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    example: 1
                    description: The current page number.
                  totalPages:
                    type: integer
                    example: 5
                    description: The total number of pages available.
                  totalItems:
                    type: integer
                    example: 50
                    description: The total number of booking payments.
                  data:
                    type: array
                    description: List of booking payments on the current page.
                    items:
                      type: object
                      properties:
                        paymentId:
                          type: number
                          example: 20931686
                          description: The unique ID of the payment.
                        paymentAt:
                          type: string
                          format: date-time
                          example: "2024-12-18T16:06:29.637Z"
                          description: The date and time of the payment.
                        amount:
                          type: number
                          example: 7500
                          description: The total amount of the payment.
                        method:
                          type: string
                          example: "CARD"
                          description: The payment method used.
                        type:
                          type: string
                          example: "BOOKING"
                          description: The type of payment.
                        status:
                          type: string
                          example: "PENDING"
                          description: The current status of the payment.
                        booking:
                          type: object
                          description: Details of the associated booking.
                          properties:
                            bookingId:
                              type: number
                              example: 16702615
                              description: The unique ID of the associated booking.
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-12-18T16:06:29.638Z"
                          description: The date and time the payment was created.
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2024-12-18T16:06:29.638Z"
                          description: The date and time the payment was last updated.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /booking-service/v1.7/booking-payments/paymentId/{paymentId}:
    get:
      summary: Retrieve booking payment by ID
      tags:
      - Booking Payment
      description: Fetch the details of a specific booking payment by its unique payment ID.
      parameters:
      - in: path
        name: paymentId
        required: true
        schema:
          type: number
        description: The unique ID of the payment.
        example: 20931686
      responses:
        200:
          description: Successfully retrieved the booking payment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentId:
                    type: number
                    example: 20931686
                    description: The unique ID of the payment.
                  paymentAt:
                    type: string
                    format: date-time
                    example: "2024-12-18T16:06:29.637Z"
                    description: The date and time of the payment.
                  amount:
                    type: number
                    example: 7500
                    description: The total amount of the payment.
                  method:
                    type: string
                    example: "CARD"
                    description: The payment method used.
                  type:
                    type: string
                    example: "BOOKING"
                    description: The type of payment.
                  status:
                    type: string
                    example: "PENDING"
                    description: The current status of the payment.
                  booking:
                    type: object
                    properties:
                      bookingId:
                        type: number
                        example: 16702615
                        description: The unique ID of the associated booking.
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-12-18T16:06:29.638Z"
                    description: The date and time the payment was created.
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-18T16:06:29.638Z"
                    description: The date and time the payment was last updated.
        400:
          description: Bad request. Invalid paymentId provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "bad request, paymentId should be a number"
        404:
          description: Resource not found. The specified payment ID does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "resource not found"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
  /booking-service/v1.7/booking-payments/bookingId/{bookingId}:
    get:
      summary: Retrieve booking payments by Booking ID
      tags:
      - Booking Payment
      description: Fetch a list of booking payments associated with a specific booking ID.
      parameters:
      - in: path
        name: bookingId
        required: true
        schema:
          type: number
        description: The unique ID of the booking.
        example: 16702615
      responses:
        200:
          description: Successfully retrieved booking payments.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    paymentId:
                      type: number
                      example: 20931686
                      description: The unique ID of the payment.
                    paymentAt:
                      type: string
                      format: date-time
                      example: "2024-12-18T16:06:29.637Z"
                      description: The date and time of the payment.
                    amount:
                      type: number
                      example: 7500
                      description: The total amount of the payment.
                    method:
                      type: string
                      example: "CARD"
                      description: The payment method used.
                    type:
                      type: string
                      example: "BOOKING"
                      description: The type of payment.
                    status:
                      type: string
                      example: "PENDING"
                      description: The current status of the payment.
                    booking:
                      type: object
                      properties:
                        bookingId:
                          type: number
                          example: 16702615
                          description: The unique ID of the associated booking.
                    createdAt:
                      type: string
                      format: date-time
                      example: "2024-12-18T16:06:29.638Z"
                      description: The date and time the payment was created.
                    updatedAt:
                      type: string
                      format: date-time
                      example: "2024-12-18T16:06:29.638Z"
                      description: The date and time the payment was last updated.
        400:
          description: Bad request. Invalid bookingId provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "bad request, bookingId should be a number"
        404:
          description: Resource not found. The specified booking ID does not have any associated payments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "resource not found"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
  # =================== OTP VERIFICATIONS ===================
  # ================================================
  # ================================================
  /booking-service/v1.7/otp-verifications/{verificationId}:
    patch:
      summary: Verify an OTP
      tags:
      - OTP Verification
      description: Verifies the provided OTP for a specific verification ID and updates the status if valid.
      security: []
      parameters:
      - in: path
        name: verificationId
        required: true
        schema:
          type: number
        description: The unique ID for the OTP verification request.
        example: 64789625
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: number
                  description: The OTP to be verified.
                  example: 6027
              required:
              - otp
      responses:
        200:
          description: Successfully verified the OTP.
          content:
            application/json:
              schema:
                type: object
                properties:
                  verificationId:
                    type: number
                    example: 64789625
                    description: The unique ID for the OTP verification request.
                  status:
                    type: string
                    example: "VERIFIED"
                    description: The updated status of the verification.
                  type:
                    type: string
                    example: "COMMUTER_VERIFICATION"
                    description: The type of verification.
                  bookingId:
                    type: number
                    example: 21955265
                    description: The booking ID associated with the OTP verification.
        400:
          description: Bad request. Either the verificationId or OTP is invalid, or the commuter is already verified.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "otp is required"
        404:
          description: Resource not found. Either the OTP is incorrect or the verification ID is invalid/expired.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "resource not found"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
  # ============== PAYMENT CALLBACKS ===============
  # ================================================
  # ================================================
  /booking-service/v1.7/payment-callbacks:
    post:
      summary: Create a new payment callback
      tags:
      - Payment Callbacks
      description: Handles payment callback requests by validating the input, generating a callback ID, and storing the data.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: string
                  description: Unique transaction ID from the payment system.
                  example: "trans12345"
                systemTransactionId:
                  type: string
                  description: System-generated transaction ID for the payment.
                  example: "sysTrans56789"
                status:
                  type: string
                  description: The status of the payment.
                  example: "SUCCESS"
                details:
                  type: string
                  description: Additional details about the payment.
                  example: "payment successful"
              required:
              - transactionId
              - systemTransactionId
              - status
      responses:
        201:
          description: Callback created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  callbackId:
                    type: string
                    example: "shortUUID123"
                    description: Unique ID generated for the callback.
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-12-19T16:00:00Z"
                    description: Timestamp when the callback was created.
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-12-19T16:00:00Z"
                    description: Timestamp when the callback was last updated.
                  status:
                    type: string
                    example: "SUCCESS"
                    description: The status of the payment.
                  details:
                    type: string
                    example: "payment successful"
                  paymentRequest:
                    type: object
                    properties:
                      transactionId:
                        type: string
                        example: "trans12345"
                        description: The gateway transaction ID related to the payment.
        400:
          description: Validation error in the request body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "transactionId is required"
        500:
          description: Internal server error when creating the callback.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error"
  # ================= LOST PARCEL ==================
  # ================================================
  # ================================================
  /booking-service/v1.7/lost-parcels:
    post:
      summary: Report a lost parcel
      tags:
      - Lost Parcel
      description: Allows users to report a lost parcel by providing relevant information, such as eTicket, parcel type, name, and description.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eTicket:
                  type: string
                  maxLength: 50
                  description: The eTicket associated with the parcel.
                type:
                  type: string
                  maxLength: 20
                  description: The type of parcel (e.g., BAG, BOX).
                name:
                  type: string
                  maxLength: 50
                  description: A name or label for the lost parcel.
                description:
                  type: string
                  maxLength: 1000
                  description: Additional details about the lost parcel.
              required:
              - eTicket
              - type
              - name
      responses:
        "201":
          description: Lost parcel successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  parcelId:
                    type: integer
                    description: The unique ID of the created lost parcel.
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lost parcel was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lost parcel was last updated.
                  eTicket:
                    type: string
                    description: The eTicket associated with the parcel.
                  referenceId:
                    type: string
                    description: A unique reference ID for the lost parcel.
                  type:
                    type: string
                    description: The type of parcel.
                  status:
                    type: string
                    description: The current status of the parcel report (e.g., REQUESTED).
                  name:
                    type: string
                    description: The name or label for the lost parcel.
                  description:
                    type: string
                    description: Additional details about the lost parcel.
                  commuter:
                    type: object
                    properties:
                      commuterId:
                        type: integer
                        description: The unique ID of the commuter.
                      name:
                        type: object
                        properties:
                          firstName:
                            type: string
                            description: The first name of the commuter.
                          lastName:
                            type: string
                            description: The last name of the commuter.
                      nic:
                        type: string
                        description: The NIC (National Identity Card) number of the commuter.
                      contact:
                        type: object
                        properties:
                          mobile:
                            type: string
                            description: The mobile number of the commuter.
                          email:
                            type: string
                            format: email
                            description: The email address of the commuter.
        "400":
          description: Bad request due to validation errors or other issues.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: No relevant booking found for the provided eTicket.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      summary: Get all lost parcels with pagination
      tags:
      - Lost Parcel
      description: Retrieves a list of all reported lost parcels.
      parameters:
      - name: page
        in: query
        description: The page number to retrieve (default is 1).
        required: false
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        description: The number of items per page (default is 10).
        required: false
        schema:
          type: integer
          example: 10
      responses:
        "200":
          description: Successfully retrieved the list of lost parcels.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: List of lost parcels.
                    items:
                      type: object
                      properties:
                        parcelId:
                          type: integer
                          description: The unique ID of the lost parcel.
                        createdAt:
                          type: string
                          format: date-time
                          description: Timestamp when the lost parcel was created.
                        updatedAt:
                          type: string
                          format: date-time
                          description: Timestamp when the lost parcel was last updated.
                        eTicket:
                          type: string
                          description: The eTicket associated with the parcel.
                        referenceId:
                          type: string
                          description: A unique reference ID for the lost parcel.
                        type:
                          type: string
                          description: The type of parcel.
                        status:
                          type: string
                          description: The current status of the parcel report (e.g., REQUESTED).
                        name:
                          type: string
                          description: The name or label for the lost parcel.
                        description:
                          type: string
                          description: Additional details about the lost parcel.
                        commuter:
                          type: object
                          description: Details of the commuter associated with the lost parcel.
                          properties:
                            commuterId:
                              type: integer
                              description: The unique ID of the commuter.
                            name:
                              type: object
                              description: The name of the commuter.
                              properties:
                                firstName:
                                  type: string
                                  description: The first name of the commuter.
                                lastName:
                                  type: string
                                  description: The last name of the commuter.
                            nic:
                              type: string
                              description: The NIC (National Identity Card) number of the commuter.
                            contact:
                              type: object
                              description: Contact details of the commuter.
                              properties:
                                mobile:
                                  type: string
                                  description: The mobile number of the commuter.
                                email:
                                  type: string
                                  format: email
                                  description: The email address of the commuter.
                  currentPage:
                    type: integer
                    description: The current page number.
                    example: 1
                  totalPages:
                    type: integer
                    description: Total number of pages available.
                    example: 5
                  totalParcels:
                    type: integer
                    description: Total number of lost parcels.
                    example: 100
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
  /booking-service/v1.7/lost-parcels/{parcelId}:
    get:
      summary: Get a lost parcel by ID
      tags:
      - Lost Parcel
      description: Retrieves the details of a specific lost parcel using its `parcelId`.
      parameters:
      - name: parcelId
        in: path
        required: true
        description: The unique ID of the lost parcel.
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrieved the lost parcel details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  parcelId:
                    type: integer
                    description: The unique ID of the lost parcel.
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lost parcel was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lost parcel was last updated.
                  eTicket:
                    type: string
                    description: The eTicket associated with the parcel.
                  referenceId:
                    type: string
                    description: A unique reference ID for the lost parcel.
                  type:
                    type: string
                    description: The type of parcel.
                  status:
                    type: string
                    description: The current status of the parcel report (e.g., REQUESTED).
                  name:
                    type: string
                    description: The name or label for the lost parcel.
                  description:
                    type: string
                    description: Additional details about the lost parcel.
                  commuter:
                    type: object
                    properties:
                      commuterId:
                        type: integer
                        description: The unique ID of the commuter.
                      name:
                        type: object
                        properties:
                          firstName:
                            type: string
                            description: The first name of the commuter.
                          lastName:
                            type: string
                            description: The last name of the commuter.
                      nic:
                        type: string
                        description: The NIC (National Identity Card) number of the commuter.
                      contact:
                        type: object
                        properties:
                          mobile:
                            type: string
                            description: The mobile number of the commuter.
                          email:
                            type: string
                            format: email
                            description: The email address of the commuter.
        "400":
          description: Bad request, invalid `parcelId`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Resource not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    patch:
      summary: Update a lost parcel by parcel ID
      tags:
      - Lost Parcel
      description: Updates the details of a specific lost parcel using its `parcelId`.
      parameters:
      - name: parcelId
        in: path
        required: true
        description: The ID of the lost parcel to update.
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                trip:
                  type: object
                  description: Updated trip details for the parcel.
                status:
                  type: string
                  description: Updated status of the parcel.
                name:
                  type: string
                  description: Updated name or label for the parcel.
                description:
                  type: string
                  description: Updated description of the parcel.
                handedOverAt:
                  type: string
                  format: date-time
                  description: The timestamp when the parcel was handed over.
                handedOverPerson:
                  type: string
                  description: Name of the person who handed over the parcel.
              required: [] # Specify required fields if any
      responses:
        "200":
          description: Successfully updated the lost parcel.
          content:
            application/json:
              schema:
                type: object
                properties:
                  parcelId:
                    type: integer
                    description: The unique ID of the lost parcel.
                  trip:
                    type: object
                    description: Trip details of the parcel.
                  eTicket:
                    type: string
                    description: eTicket associated with the parcel.
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lost parcel was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lost parcel was last updated.
                  referenceId:
                    type: string
                    description: Unique reference ID for the lost parcel.
                  status:
                    type: string
                    description: Current status of the parcel report.
                  type:
                    type: string
                    description: Type of parcel.
                  name:
                    type: string
                    description: Name or label for the parcel.
                  description:
                    type: string
                    description: Additional details about the lost parcel.
                  commuter:
                    type: object
                    properties:
                      name:
                        type: object
                        properties:
                          firstName:
                            type: string
                            description: First name of the commuter.
                      contact:
                        type: object
                        properties:
                          email:
                            type: string
                            format: email
                            description: Email address of the commuter.
        "400":
          description: Bad request, validation errors in input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: No parcel found for the given parcel ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /booking-service/v1.7/lost-parcels/referenceId/{referenceId}:
    get:
      summary: Get a lost parcel by reference ID
      tags:
      - Lost Parcel
      security: []
      description: Retrieves the details of a specific lost parcel using its `referenceId`. Triggers OTP verification if required and sends an email with the parcel status.
      parameters:
      - name: referenceId
        in: path
        required: true
        description: The reference ID of the lost parcel.
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the lost parcel or OTP verification details.
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    parcelId:
                      type: integer
                      description: The unique ID of the lost parcel.
                    trip:
                      type: object
                      description: The trip information.
                    eTicket:
                      type: string
                      description: The eTicket associated with the parcel.
                    createdAt:
                      type: string
                      format: date-time
                      description: Timestamp when the lost parcel was created.
                    updatedAt:
                      type: string
                      format: date-time
                      description: Timestamp when the lost parcel was last updated.
                    referenceId:
                      type: string
                      description: A unique reference ID for the lost parcel.
                    status:
                      type: string
                      description: The current status of the parcel report.
                    type:
                      type: string
                      description: The type of parcel.
                    name:
                      type: string
                      description: The name or label for the lost parcel.
                    description:
                      type: string
                      description: Additional details about the lost parcel.
                    commuter:
                      type: object
                      properties:
                        name:
                          type: object
                          properties:
                            firstName:
                              type: string
                              description: The first name of the commuter.
                        contact:
                          type: object
                          properties:
                            email:
                              type: string
                              format: email
                              description: The email address of the commuter.
                - type: object
                  properties:
                    verificationId:
                      type: string
                      description: The unique verification ID for OTP verification.
        "400":
          description: Bad request, invalid `referenceId`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: No parcel found for this reference ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
